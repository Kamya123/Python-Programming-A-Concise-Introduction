WEBVTT

1
00:00:10.545 --> 00:00:14.430
Now letâ€™s take a look at another
kind of loop, the for loop.

2
00:00:14.430 --> 00:00:18.740
Here is the cheer program
rewritten using a for loop.

3
00:00:18.740 --> 00:00:19.240
Let me run it.

4
00:00:25.912 --> 00:00:30.210
It prints two, four, six,
eight, who do we appreciate?

5
00:00:30.210 --> 00:00:31.790
Coursera.

6
00:00:31.790 --> 00:00:33.770
Now let's take a look at this loop.

7
00:00:33.770 --> 00:00:38.432
Let's start count at two,
we'll go up two, but

8
00:00:38.432 --> 00:00:44.180
not including none, and
we'll go in steps of two.

9
00:00:44.180 --> 00:00:48.643
So it'll be two, and then the next
time through, it'll be two more, four,

10
00:00:48.643 --> 00:00:51.871
then the next time through
it'll be two more, six, and

11
00:00:51.871 --> 00:00:54.779
the next time through it'll be two more,
eight.

12
00:00:55.870 --> 00:00:59.090
There won't be a next time,
because the next time it would be 10, and

13
00:00:59.090 --> 00:01:00.590
that would exceed nine.

14
00:01:00.590 --> 00:01:04.990
Every time through the loop
we're going to print the count,

15
00:01:04.990 --> 00:01:06.810
and we're going to print a space.

16
00:01:06.810 --> 00:01:10.122
It's just like the other program,
otherwise.

17
00:01:10.122 --> 00:01:14.063
We print,
use the print to get a fresh line, print,

18
00:01:14.063 --> 00:01:17.929
who do we appreciate, and
then we print Coursera.

19
00:01:22.033 --> 00:01:28.389
Let me emphasize that this one
is the first one that it does.

20
00:01:28.389 --> 00:01:34.286
This one,
when count takes on the value nine,

21
00:01:34.286 --> 00:01:37.326
it will not do that one.

22
00:01:37.326 --> 00:01:41.440
It will not go through the loop
when count is equal to nine.

23
00:01:41.440 --> 00:01:45.800
It's up to but not including nine and
the step size will be two.

24
00:01:45.800 --> 00:01:47.840
So, this will go two, and
then four, then six, then eight.

25
00:01:47.840 --> 00:01:51.683
Now I want you to try and

26
00:01:51.683 --> 00:01:59.070
write a function and using the for loop.

27
00:01:59.070 --> 00:02:02.340
I want you to write the countdown
program using that.

28
00:02:03.390 --> 00:02:07.050
Now remember that this
step can be negative.

29
00:02:08.170 --> 00:02:11.331
Let me show you my run of this program.

30
00:02:11.331 --> 00:02:18.960
Countdown one writes 10,
9, 8, 7 ,6, 5, 4, 3, 2, 1.

31
00:02:18.960 --> 00:02:23.940
And then Blast Off,
this is a rocket launch countdown.

32
00:02:25.500 --> 00:02:28.460
Now, I want to emphasize that the range,

33
00:02:28.460 --> 00:02:33.320
we have a starting position, we have
a stopping position, it won't do that one.

34
00:02:33.320 --> 00:02:34.570
And this is the step size.

35
00:02:34.570 --> 00:02:36.700
The step sign could be positive or
negative.

36
00:02:38.710 --> 00:02:43.485
Okay, so take a moment to write this
program, and then when you get it written,

37
00:02:43.485 --> 00:02:46.574
press the continue button and
I'll show you mine.

38
00:02:53.973 --> 00:02:57.900
All right,
here is my version of doing the countdown.

39
00:02:57.900 --> 00:03:02.930
Countdown1, for
count in a range of ten, so

40
00:03:02.930 --> 00:03:08.240
we will start at ten going down to
zero but we won't do the zeroth one.

41
00:03:08.240 --> 00:03:14.170
And since we want to go down we
want to use a negative step size,

42
00:03:14.170 --> 00:03:17.762
we want to go down one at a time from ten
to nine, to eight until negative one.

43
00:03:17.762 --> 00:03:20.240
We're going to print the count.

44
00:03:20.240 --> 00:03:26.680
We're going to print a space, instead
of a new line, each time through so

45
00:03:26.680 --> 00:03:30.810
that we end up ten, nine, eight, seven,
six, five, four, three, two, one.

46
00:03:30.810 --> 00:03:33.220
Since we won't use zero,
there isn't a zero.

47
00:03:33.220 --> 00:03:38.450
And then we print a new line,
and then we print, Blast off.

48
00:03:39.810 --> 00:03:44.330
Now let's speak a minute about
finding errors in programs.

49
00:03:44.330 --> 00:03:50.350
Here's an example of a function written
in Python that has errors in it.

50
00:03:50.350 --> 00:03:54.200
And I want you to think about how
you would go about finding errors.

51
00:03:54.200 --> 00:03:58.680
Of course, you can look through
this thing very carefully, and

52
00:04:00.300 --> 00:04:04.870
probably determine what the errors are,
but let's do it by trial and error.

53
00:04:04.870 --> 00:04:08.670
Let's run the function and
see what python tells us.

54
00:04:08.670 --> 00:04:10.000
Okay, control enter.

55
00:04:11.370 --> 00:04:16.330
Here's the function and it says

56
00:04:16.330 --> 00:04:21.620
here we have an indention here, unexpected
indent, and it points to this print.

57
00:04:21.620 --> 00:04:27.460
So if we look over here,
you see this line is indented four space,

58
00:04:29.170 --> 00:04:34.220
one, two, three, four, but
this one is indented five spaces.

59
00:04:34.220 --> 00:04:38.170
So this one needs to be moved over and

60
00:04:38.170 --> 00:04:41.730
that's what it's telling this,
the indent is an unexpected amount.

61
00:04:41.730 --> 00:04:44.950
So, back it up one, then we'll try again.

62
00:04:47.200 --> 00:04:48.370
Now we didn't get an error.

63
00:04:49.380 --> 00:04:52.020
So, let's try running it and
see if it runs properly.

64
00:04:57.500 --> 00:04:58.650
What is my favorite toy.

65
00:04:58.650 --> 00:04:59.820
So, I'm going to type in football.

66
00:05:02.310 --> 00:05:03.200
And we get an error.

67
00:05:05.400 --> 00:05:06.480
Name error.

68
00:05:06.480 --> 00:05:09.400
The name Ma is not defined.

69
00:05:11.600 --> 00:05:14.480
Now we were talking about
my tor why is it say my.

70
00:05:14.480 --> 00:05:17.800
Well its interpreting this
as being a subtraction.

71
00:05:17.800 --> 00:05:20.695
It wants to take my minus toy.

72
00:05:20.695 --> 00:05:22.610
Now let's look back at our program.

73
00:05:22.610 --> 00:05:29.340
We defined a variable called underscore
toy, and we wrote my hyphen toy.

74
00:05:29.340 --> 00:05:33.830
So this needs to be corrected
to be the right name,

75
00:05:34.900 --> 00:05:37.200
and now let's run this again and
see what happens.

76
00:05:38.370 --> 00:05:43.410
Again, of course, it works as far
as the loading of the program.

77
00:05:52.090 --> 00:05:53.940
So now the program works.

78
00:05:53.940 --> 00:05:55.790
We found two errors in it.

79
00:05:55.790 --> 00:05:58.610
I'm going to put this back like we had it.

80
00:05:59.620 --> 00:06:03.330
Space, and

81
00:06:03.330 --> 00:06:09.460
notice that the editor is telling us
right here that there's an error.

82
00:06:09.460 --> 00:06:15.210
So that the editor can detect some of
the errors before they even run it.

83
00:06:16.230 --> 00:06:18.637
Python itself helps you
to track down the errors.