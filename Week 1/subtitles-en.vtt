WEBVTT

1
00:00:12.808 --> 00:00:15.850
Now we began learning Python.

2
00:00:15.850 --> 00:00:19.061
First, we'll start learning
a little bit about Spyder,

3
00:00:19.061 --> 00:00:23.210
the integrated development
environment that we're using.

4
00:00:23.210 --> 00:00:26.720
To start it, click on Start and

5
00:00:26.720 --> 00:00:32.932
go to this search window and
type S-P-Y-D-E-R and

6
00:00:32.932 --> 00:00:37.670
you'll see Spyder, you can execute it.

7
00:00:38.880 --> 00:00:42.210
You can go to the spotlight on
Macintosh and do the same thing.

8
00:00:44.490 --> 00:00:46.122
It'll take just a moment to load.

9
00:00:46.122 --> 00:00:52.340
And when it does load,
you'll notice that it has several panes.

10
00:00:52.340 --> 00:00:53.510
Here's an editor pane.

11
00:00:54.570 --> 00:00:57.180
Here is the iPython console pane.

12
00:00:57.180 --> 00:00:58.880
This is were programs will be executed.

13
00:01:00.010 --> 00:01:03.860
And then there's a pane up here
that has three different tabs.

14
00:01:03.860 --> 00:01:07.510
This is object inspector,
this is a variable explorer, and

15
00:01:07.510 --> 00:01:09.180
this is a file explorer.

16
00:01:09.180 --> 00:01:12.040
For the time being,
we'll only talk about file explorer.

17
00:01:14.420 --> 00:01:21.452
Up at the top you'll see the current
working directory Now on my machine,

18
00:01:21.452 --> 00:01:28.124
using users, Bill as my name,
document, PythonCoursera.

19
00:01:33.826 --> 00:01:36.178
If I go down here and type ls,

20
00:01:36.178 --> 00:01:41.570
this is a Unix command that works
in IPython or PC and a Macintosh.

21
00:01:43.780 --> 00:01:49.312
It'll show that the current working
director is the one shown up here.

22
00:01:49.312 --> 00:01:52.450
But I want to go to lesson one.

23
00:01:52.450 --> 00:01:55.440
So I'm going to click on that and

24
00:01:55.440 --> 00:02:00.270
now if I go down here and type LS,
we're still in this directory.

25
00:02:00.270 --> 00:02:03.970
So I want to set this one as
the current work directory.

26
00:02:03.970 --> 00:02:05.660
So I'm going to click right there.

27
00:02:06.750 --> 00:02:10.300
Now when I type LS, I've got

28
00:02:10.300 --> 00:02:15.390
the lesson one directory and
there's a list of programs in it.

29
00:02:15.390 --> 00:02:19.760
They're the same as up here
exercise one with lecture P1.

30
00:02:23.220 --> 00:02:30.020
Okay, now over here Spyder will always
start out with a temporary file.

31
00:02:30.020 --> 00:02:31.250
I'm not interested in that file.

32
00:02:32.680 --> 00:02:38.579
If I get rid of it,
it just keeps coming back,

33
00:02:38.579 --> 00:02:44.360
so I want to go over here and
use my first program, start Python,

34
00:02:44.360 --> 00:02:49.537
then I'm going to click that away and
I'm not going to [INAUDIBLE] Save it.

35
00:02:49.537 --> 00:02:55.684
Now the name of this
file is startpython.py.

36
00:02:55.684 --> 00:02:58.800
Most Python programs will end in dot py.

37
00:03:00.850 --> 00:03:06.930
And I'll put the name of it right
here after this pound sign so

38
00:03:06.930 --> 00:03:14.050
that I can keep track of the name of
the file as it's stored on the disk.

39
00:03:15.520 --> 00:03:19.350
And notice several things about this.

40
00:03:19.350 --> 00:03:24.920
There's a line going across every now and
then.

41
00:03:24.920 --> 00:03:27.249
Anything between the two
lines is called a cell.

42
00:03:29.830 --> 00:03:32.480
This is an IPython feature.

43
00:03:33.860 --> 00:03:38.310
We can execute anything in one of these
cells without executing the whole file.

44
00:03:39.960 --> 00:03:45.150
Now to make cell, we type pound,
percent, sand and pound, percent, sand.

45
00:03:45.150 --> 00:03:47.470
Everything between these two is a cell.

46
00:03:48.800 --> 00:03:56.220
Now let's go over here and
execute this first function.

47
00:03:56.220 --> 00:03:57.860
Write down function.

48
00:03:57.860 --> 00:04:03.050
I'm going to execute it by clicking
anywhere inside this cell and

49
00:04:03.050 --> 00:04:06.060
I'm going to type control enter.

50
00:04:06.060 --> 00:04:11.528
PC our type Ctrl+Enter, but
on a Macintosh I would type

51
00:04:11.528 --> 00:04:16.960
Cmd+Return, they're equivalent.

52
00:04:16.960 --> 00:04:21.270
Now that loaded everything in this cell

53
00:04:21.270 --> 00:04:26.300
into our iPython console,
from where I can run it.

54
00:04:27.630 --> 00:04:31.430
And I run it by typing
the name of the function.

55
00:04:31.430 --> 00:04:33.070
This function is a simple one.

56
00:04:33.070 --> 00:04:34.440
It just prints hello world.

57
00:04:34.440 --> 00:04:41.010
This is traditional in programming to have
a simple program like this to begin with.

58
00:04:41.010 --> 00:04:45.330
Let's analyze the way this looks.

59
00:04:45.330 --> 00:04:49.090
We've got define function, got the name
of the function we're defining, hello.

60
00:04:50.100 --> 00:04:53.420
And the line always ends in colon.

61
00:04:53.420 --> 00:04:57.100
Now, and a function always
has a pair of parentheses.

62
00:04:57.100 --> 00:05:01.970
Later on we'll be putting arguments
inside of these parentheses.

63
00:05:01.970 --> 00:05:06.500
Then we have four spaces, and

64
00:05:06.500 --> 00:05:10.900
then the Python command print.

65
00:05:13.070 --> 00:05:17.130
And the phrase to print in quotes,
hello world.

66
00:05:19.250 --> 00:05:22.520
Everything that's indented
under this function

67
00:05:23.660 --> 00:05:25.700
name will be part of the function.

68
00:05:28.320 --> 00:05:33.100
So once we get it over
here in the Console,

69
00:05:33.100 --> 00:05:34.820
we can run it as often as we want.

70
00:05:36.090 --> 00:05:37.200
Here's another function.

71
00:05:37.200 --> 00:05:38.700
It's practically the same thing.

72
00:05:38.700 --> 00:05:40.900
Define, and we'll give it a new name.

73
00:05:40.900 --> 00:05:43.747
And we're going to print
a different phrase.

74
00:05:45.518 --> 00:05:50.450
Again, we're going to have to go
over here and type it, now watch.

75
00:05:50.450 --> 00:05:55.020
If I'm not careful and I start typing,
I'm typing in the editor.

76
00:05:55.020 --> 00:05:59.540
And the editor window indicates
that we typed into it by typing

77
00:05:59.540 --> 00:06:01.630
a asterisk that means
the file needs to be saved.

78
00:06:01.630 --> 00:06:06.890
But I don't want to save it so I'm
going to type Control+Z and that'll remove

79
00:06:09.220 --> 00:06:16.580
this typing that I've done and
on Macintosh it would be Cmd Z.

80
00:06:18.530 --> 00:06:22.788
I've gotta be careful
that I go over here and

81
00:06:22.788 --> 00:06:29.450
execute this thing from
the iPython console.

82
00:06:29.450 --> 00:06:34.823
Notice the tab up here
says iPython console Now,

83
00:06:34.823 --> 00:06:40.481
if we type one of these
functions without loading

84
00:06:40.481 --> 00:06:45.180
it into iPython, it's just not known.

85
00:06:47.950 --> 00:06:51.960
So I've gotta go over here and
type Ctrl+Enter or

86
00:06:51.960 --> 00:06:56.750
Cmd Return click down here and

87
00:06:56.750 --> 00:07:02.960
type outschool you got to
type it right of course.

88
00:07:04.270 --> 00:07:10.790
Type up arrow and will repeat the last
command and I can change it our school,

89
00:07:12.230 --> 00:07:17.690
this course here is actually good.

90
00:07:17.690 --> 00:07:23.240
Now, I want to warn you about various
things that can go wrong fairly early so

91
00:07:23.240 --> 00:07:27.480
that you can fix them
in case you get there.

92
00:07:27.480 --> 00:07:31.380
One thing is that you can write
programs that won't ever stop.

93
00:07:33.810 --> 00:07:38.830
This one, called it forever
because it will run forever.

94
00:07:38.830 --> 00:07:41.010
This is a while loop.

95
00:07:41.010 --> 00:07:43.120
While is true is true and

96
00:07:43.120 --> 00:07:47.690
it's always true, we're going to
do nothing, we're going to pass.

97
00:07:47.690 --> 00:07:50.450
That's a simple loop.

98
00:07:50.450 --> 00:07:52.790
We'll talk about more about that later.

99
00:07:52.790 --> 00:07:58.589
And I'm going to load that loop in and
I'm going to run it.

100
00:08:01.121 --> 00:08:07.859
Now, This function is running and
running and running and

101
00:08:07.859 --> 00:08:12.880
I don't have any control on what's going
on anymore and I need to when to stop it.

102
00:08:12.880 --> 00:08:17.890
The way to stop this is typing Ctrl C,
holding the control key then

103
00:08:17.890 --> 00:08:22.770
pressing c.

104
00:08:22.770 --> 00:08:24.560
And you'll get a keyboard interrupt.

105
00:08:25.890 --> 00:08:29.250
Now the Macintosh, you type
exactly the same thing, control c.

106
00:08:31.460 --> 00:08:36.169
Now, there's a possibility that you write
a program that even that won't work.

107
00:08:38.980 --> 00:08:42.250
Let's bring this one up again.

108
00:08:42.250 --> 00:08:44.950
It will work on this one right.

109
00:08:44.950 --> 00:08:47.290
We're going to have
another way to stop this.

110
00:08:47.290 --> 00:08:52.130
And another way to stop this is to
make this console window go away

111
00:08:52.130 --> 00:08:56.530
we're going to click this close tab and
it's gone.

112
00:08:57.700 --> 00:09:00.830
Now we'll need a new console
window in order to keep going.

113
00:09:00.830 --> 00:09:04.950
And we go Console menu, and
we Open an IPython console.

114
00:09:04.950 --> 00:09:06.890
Now we don't open a Python console,

115
00:09:06.890 --> 00:09:11.490
in this course we're only using IPython
consoles because they're nicer.

116
00:09:11.490 --> 00:09:13.300
They have features that we need for

117
00:09:13.300 --> 00:09:17.159
this course that you would
be using in data analysis.

118
00:09:18.290 --> 00:09:25.750
You may as well use the IPython console
rather than writing extra code okay.

119
00:09:27.520 --> 00:09:32.400
Click on that it's connected to
a kernel a kernel is a running copy of

120
00:09:34.060 --> 00:09:37.440
Python and now we have an IPython console.

121
00:09:37.440 --> 00:09:42.940
We don't have, however,
are functions that we'd enter.

122
00:09:42.940 --> 00:09:48.726
We've got to execute them again,
control enter, and load them in.

123
00:09:48.726 --> 00:09:54.250
And I'm messing up.

124
00:09:54.250 --> 00:09:57.437
All right, I'll type over here, Hello.

125
00:10:01.829 --> 00:10:06.225
And now we're back with
a good copy of Python,

126
00:10:06.225 --> 00:10:12.100
with a good copy of iPython
console without any problems.

127
00:10:12.100 --> 00:10:16.403
So what we did was we clicked
here to close the tab,

128
00:10:16.403 --> 00:10:19.069
clicked over here on console,

129
00:10:19.069 --> 00:10:24.000
open an app right on console and
then we've got a new one.