WEBVTT

1
00:00:11.088 --> 00:00:15.360
Python has libraries that add
functionality to the basic

2
00:00:15.360 --> 00:00:17.230
interpreter of Python.

3
00:00:18.470 --> 00:00:23.610
The point here is that if you put
every capability into every program,

4
00:00:23.610 --> 00:00:26.720
even your smallest programs
would be very small.

5
00:00:26.720 --> 00:00:30.940
By having libraries, these are portions

6
00:00:30.940 --> 00:00:36.000
of Python that are set aside that
are not incorporated into every program.

7
00:00:36.000 --> 00:00:38.460
You can write smaller programs, and

8
00:00:38.460 --> 00:00:43.560
only call in these libraries when
you need their capabilities.

9
00:00:43.560 --> 00:00:47.480
Now, let's take a look at libraries,
and how you use them a little bit.

10
00:00:53.909 --> 00:00:58.675
Here is the key for getting a library in.

11
00:00:58.675 --> 00:01:02.590
You import and you give the name library.

12
00:01:02.590 --> 00:01:07.530
That's saying that import random
will import a random library.

13
00:01:09.010 --> 00:01:14.909
Here's an example of importing it.

14
00:01:14.909 --> 00:01:23.539
Okay, just executing that statement
import in the random capability.

15
00:01:23.539 --> 00:01:27.100
In here, we can execute something of it.

16
00:01:28.520 --> 00:01:31.540
Print random random number.

17
00:01:31.540 --> 00:01:36.181
Random is a method of this random library,
and

18
00:01:36.181 --> 00:01:40.944
it generates a random number between 0 and
1.

19
00:01:40.944 --> 00:01:46.060
If we repeat this, we'll get a different
random number between 0 and 1.

20
00:01:46.060 --> 00:01:47.720
We can repeat it several times, and

21
00:01:47.720 --> 00:01:51.980
it'll keep giving us different numbers,
because it's generating them randomly.

22
00:01:55.940 --> 00:02:01.110
Here is another method
in the random library.

23
00:02:01.110 --> 00:02:04.045
This will generate a random
integer between 3 and 8.

24
00:02:04.045 --> 00:02:10.290
3 might be given and 8 might be given,
you'll be in that range.

25
00:02:10.290 --> 00:02:16.030
So let's do this again, I'm going to
print another random number, say it's 4.

26
00:02:16.030 --> 00:02:19.255
Here's another one, it's 3,
see we've got the lower end.

27
00:02:19.255 --> 00:02:23.770
3 again, they're random so
I never know what's going to come out.

28
00:02:25.010 --> 00:02:29.010
Notice that we did manage to get 3 and
8 in there and

29
00:02:29.010 --> 00:02:35.280
these are generating only integers
3 4 5 6 7 or 8, randomly.

30
00:02:37.760 --> 00:02:41.810
Now let's make use of
another random capability and

31
00:02:41.810 --> 00:02:44.020
write a little program that
will generate a sentence.

32
00:02:45.440 --> 00:02:49.648
Now this is not a very sophisticated
sentence so don't expect too much of it,

33
00:02:49.648 --> 00:02:51.604
but here's what we are going to do.

34
00:02:56.860 --> 00:03:01.588
I'm going to write a run
function sentence.

35
00:03:03.653 --> 00:03:07.027
And it says, a bicycle chews gingerly.

36
00:03:09.458 --> 00:03:10.989
A car shoots gingerly.

37
00:03:13.150 --> 00:03:15.320
A bicycle shoots sweetly.

38
00:03:15.320 --> 00:03:21.870
It generates grammatically correct
sentences, not very sophisticated ones.

39
00:03:21.870 --> 00:03:24.290
It doesn't have a very large vocabulary.

40
00:03:24.290 --> 00:03:26.910
Let's look and see how this works.

41
00:03:26.910 --> 00:03:30.310
We have a list of verbs and
just put these in,

42
00:03:30.310 --> 00:03:34.790
cook, goes, cooks, shoots,
faints, chews, screams.

43
00:03:35.810 --> 00:03:39.790
It has a list of nouns,
bear, lion, mother, so on.

44
00:03:39.790 --> 00:03:41.220
Has a list of adverbs.

45
00:03:42.310 --> 00:03:44.520
And it has a list of articles.

46
00:03:44.520 --> 00:03:46.651
And it would generate
a random English sentence.

47
00:03:48.686 --> 00:03:54.030
So what we do in the function is,
first of all we create a random article.

48
00:03:54.030 --> 00:03:57.880
Now, one of the methods
of random is choice.

49
00:03:57.880 --> 00:04:04.442
That means it will randomly choose
one of the items out of that list.

50
00:04:04.442 --> 00:04:06.569
We randomly choose an article,

51
00:04:06.569 --> 00:04:11.451
we randomly choose one of the nouns,
we randomly choose one of the verbs,

52
00:04:11.451 --> 00:04:16.825
we randomly choose one of the adverbs,
then we put together our sentence.

53
00:04:16.825 --> 00:04:19.919
The sentence is always going to
be an article, followed by space,

54
00:04:19.919 --> 00:04:25.925
followed by a noun, followed by space,
followed by a verb,

55
00:04:25.925 --> 00:04:29.622
followed by space, followed by an adverb,
with a period on the end.

56
00:04:31.642 --> 00:04:36.272
Just to make it look more like a sentence
we're going to use a method of stings

57
00:04:36.272 --> 00:04:40.750
called Capitalize that will
capitalize the first letter.

58
00:04:40.750 --> 00:04:43.240
So that it actually looks like a sentence.

59
00:04:43.240 --> 00:04:45.490
And then we'll print the sentence.

60
00:04:45.490 --> 00:04:47.060
And that's what it does.

61
00:04:47.060 --> 00:04:52.570
In this case,
it generated a random article, this,

62
00:04:52.570 --> 00:04:57.160
then a random named bicycle
then a random verb shoots, and

63
00:04:57.160 --> 00:04:58.850
then a random adverb sweetly.

64
00:04:58.850 --> 00:05:03.900
We put that together to make
a sentence with spaces and a period.

65
00:05:03.900 --> 00:05:08.760
And then we capitalize the first
letter and then we printed it out.

66
00:05:08.760 --> 00:05:14.040
That's a simple little function
making use of the library, random.

67
00:05:15.260 --> 00:05:20.129
Now you're going to adapt this program
to write a simple four-line poem.

68
00:05:32.385 --> 00:05:36.339
Here's the function repeated again so

69
00:05:36.339 --> 00:05:41.810
that you can modify it
to write a simple poem.

70
00:05:41.810 --> 00:05:47.685
Everything inside this simple poem is
exactly what's in previous sentence,

71
00:05:47.685 --> 00:05:51.335
but you need to write a loops so
that it goes through and

72
00:05:51.335 --> 00:05:55.395
generates four sentences, and
then we will call that point.

73
00:05:55.395 --> 00:06:00.545
Now in order to do that you are going to
have to enclose this in a loop, and

74
00:06:00.545 --> 00:06:03.620
that means you need
indent all these lines.

75
00:06:03.620 --> 00:06:09.412
Now, I want to call your
attention to the edit function,

76
00:06:09.412 --> 00:06:12.799
which has an indent capability.

77
00:06:12.799 --> 00:06:21.190
If I highlight this, for
example, I'll indent everything.

78
00:06:21.190 --> 00:06:25.530
There it moved it all over,
if I unindent I can move it all back.

79
00:06:33.927 --> 00:06:38.527
So you write a function that
writes a simple poem by adapting

80
00:06:38.527 --> 00:06:43.316
our sentence function or
adapting this copy of it right here.

81
00:06:48.813 --> 00:06:54.380
Let me show you my example so
that you'll know where you're going.

82
00:06:54.380 --> 00:06:59.630
Here is my solution,
there is one run of a simple poem,

83
00:06:59.630 --> 00:07:05.350
here's another run,
here's a different poem each time.

84
00:07:07.900 --> 00:07:12.109
Now you go write yours and
when you've finished it,

85
00:07:12.109 --> 00:07:16.040
press Continue and
I'll show you our solution.

86
00:07:20.105 --> 00:07:21.305
Here is my solution.

87
00:07:22.725 --> 00:07:28.650
I simply moved everything over and
put a loop around it.

88
00:07:29.880 --> 00:07:34.220
For i in the range 4, that's 0 through 4.

89
00:07:35.520 --> 00:07:36.952
Just does all the whole thing.