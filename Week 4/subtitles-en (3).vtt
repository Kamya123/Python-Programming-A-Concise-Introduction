WEBVTT

1
00:00:12.085 --> 00:00:16.560
Now let's write a small menu-driven
database application to make use of what

2
00:00:16.560 --> 00:00:17.591
we've learned.

3
00:00:20.858 --> 00:00:23.940
First, I want to run it to give
you the idea of where we're going.

4
00:00:26.210 --> 00:00:34.790
I'll open the command prompt,
python phones.py.

5
00:00:34.790 --> 00:00:37.649
This is the menu.

6
00:00:37.649 --> 00:00:40.650
I type show, it will show all
the records we have there.

7
00:00:40.650 --> 00:00:43.750
So we have three names and
three phone numbers.

8
00:00:43.750 --> 00:00:50.852
We can create a new name
With a new phone number.

9
00:00:59.142 --> 00:01:00.420
I'm going to show you that it's there.

10
00:01:02.450 --> 00:01:03.487
We can delete a name.

11
00:01:05.742 --> 00:01:10.801
We're going to delete number three,
show you that it's gone.

12
00:01:10.801 --> 00:01:12.080
We can edit a name.

13
00:01:13.760 --> 00:01:15.790
I'm going to edit number three.

14
00:01:15.790 --> 00:01:23.070
That's the lame [INAUDIBLE] and I'll press
return and leave that name unchanged.

15
00:01:23.070 --> 00:01:24.773
But I'm going to enter a new phone number.

16
00:01:33.366 --> 00:01:35.815
I'm going to show you that it's there.

17
00:01:35.815 --> 00:01:40.311
And then I can quit,
what happens when we quit is that

18
00:01:40.311 --> 00:01:43.796
it saves the changes that you've made.

19
00:01:52.337 --> 00:01:53.575
That's the way we left it.

20
00:01:56.837 --> 00:02:00.227
All of this is stored in a CSV file.

21
00:02:00.227 --> 00:02:01.389
My files.

22
00:02:01.389 --> 00:02:03.629
All of this is stored in a CSV file.

23
00:02:14.612 --> 00:02:15.794
Name and phone number.

24
00:02:21.127 --> 00:02:24.360
Now let's go over and
look and see how we do this.

25
00:02:25.360 --> 00:02:29.060
First of all, we're going to write
a simplified version of this program.

26
00:02:30.880 --> 00:02:34.778
We go to app python consult and
run that simplified version.

27
00:02:38.819 --> 00:02:42.830
It doesn't really load the file it just
announces that it's loading the file.

28
00:02:42.830 --> 00:02:46.734
If you quit,
it announces that it's saving the file and

29
00:02:46.734 --> 00:02:49.320
doesn't actually change the file.

30
00:02:51.279 --> 00:02:52.134
Run it again.

31
00:02:55.602 --> 00:02:59.886
If I show, it just announces it's showing.

32
00:02:59.886 --> 00:03:02.792
If I type new,
it just announces it's adding.

33
00:03:02.792 --> 00:03:07.301
If I type delete,
it announces it's deleting.

34
00:03:07.301 --> 00:03:09.990
And if I type edit,
it announces that it's editing.

35
00:03:11.350 --> 00:03:13.910
And that's all that it does.

36
00:03:13.910 --> 00:03:17.460
The reason is we can't
write all of these at once.

37
00:03:17.460 --> 00:03:21.984
What we're going to do is we're
going to write this main portion that

38
00:03:21.984 --> 00:03:26.610
displays the menu, and
here is the first version of our program.

39
00:03:31.093 --> 00:03:35.050
Deleting the phone is just a function
that announces that it's deleting.

40
00:03:35.050 --> 00:03:36.910
Edit, the same way.

41
00:03:36.910 --> 00:03:42.745
Each one of these actions is just
a stub that announces what it does.

42
00:03:42.745 --> 00:03:45.460
I've got a function for
displaying the menu.

43
00:03:45.460 --> 00:03:50.150
We've got a function for going through
what we'll call the main loop and

44
00:03:50.150 --> 00:03:55.590
the way you start the program is
we have a statement like this.

45
00:03:55.590 --> 00:03:59.680
There are two underscores before and
after name, two underscores before and

46
00:03:59.680 --> 00:04:00.330
after main.

47
00:04:01.610 --> 00:04:05.843
If the name is main, then we're
going to start at the main_loop, and

48
00:04:05.843 --> 00:04:07.370
the main loop is a function.

49
00:04:08.910 --> 00:04:11.421
First of all it loads the phone list,

50
00:04:11.421 --> 00:04:16.054
the last thing it does is saves
the phone list and next it runs a loop.

51
00:04:18.125 --> 00:04:20.930
While true, do everything in this loop.

52
00:04:20.930 --> 00:04:24.830
Well, true, is always true, so
this loop will run forever.

53
00:04:24.830 --> 00:04:26.300
I'll show you how we
get out of that later.

54
00:04:27.590 --> 00:04:29.750
First thing we do is we
get their menu choice.

55
00:04:30.830 --> 00:04:35.320
Menu choice will print the menu and
retrieve what your choice is.

56
00:04:36.470 --> 00:04:40.980
If your choice is none,
that is you didn't make a choice,

57
00:04:40.980 --> 00:04:44.280
you'll just double back and
do the loop again.

58
00:04:44.280 --> 00:04:47.610
Continue means continue at
the beginning of the loop.

59
00:04:49.570 --> 00:04:54.065
If your choice is q, then we'll print
exiting and break out of the loop.

60
00:04:55.180 --> 00:04:58.728
Which means we'll do this next statement
which will save the phone last and

61
00:04:58.728 --> 00:04:59.413
then we quit.

62
00:05:02.652 --> 00:05:04.950
If your choice is new,
we'll create a file.

63
00:05:04.950 --> 00:05:07.140
If the choice is delete,
we'll delete a file.

64
00:05:07.140 --> 00:05:09.235
If the choice is show phones,
we'll show '.

65
00:05:09.235 --> 00:05:11.570
The choice is edit, we'll edit the file.

66
00:05:12.680 --> 00:05:16.282
If there's anything else, we'll just
announce that as an invalid choice.

67
00:05:19.406 --> 00:05:23.770
Now let's see how we get,
if we print the menu and make the choice.

68
00:05:24.860 --> 00:05:30.410
We call this function, And,
first of all, it says print.

69
00:05:32.860 --> 00:05:35.230
Choose one of the following options.

70
00:05:35.230 --> 00:05:36.690
Then it prints all of the options.

71
00:05:38.550 --> 00:05:39.111
So we see that here.

72
00:05:41.982 --> 00:05:44.692
And then we use an input
statement to get that choice.

73
00:05:47.353 --> 00:05:50.200
Again, we see there's
right along in there.

74
00:05:51.890 --> 00:05:57.323
Now we changed the choice that
the person makes to lowercase so

75
00:05:57.323 --> 00:06:01.617
we can compare it to these
letters in this table.

76
00:06:05.544 --> 00:06:10.880
If it is in this table, then we'll
return that choice changed to lowercase.

77
00:06:11.990 --> 00:06:15.385
So, that down here in our
main loop all of the choices

78
00:06:15.385 --> 00:06:17.942
will be lower case when they get there.

79
00:06:20.056 --> 00:06:24.690
So, I don't have to compare the q and
capital q.

80
00:06:24.690 --> 00:06:29.720
If the choice is not in that, they will
print the choices of question mark.

81
00:06:29.720 --> 00:06:32.352
That is an invalid option return none.

82
00:06:36.232 --> 00:06:38.958
Let's try that and see what happens.

83
00:06:42.891 --> 00:06:46.335
Choose one of the following options.

84
00:06:46.335 --> 00:06:50.080
I'll choose t, that's an invalid option.

85
00:06:50.080 --> 00:06:54.430
I'll choose 3, that's an invalid option.

86
00:06:54.430 --> 00:06:58.270
But if I choose capital Q,
that works just fine.

87
00:06:59.468 --> 00:07:01.515
Even though capital Q is not on this list,

88
00:07:01.515 --> 00:07:04.370
capital Q gets change to
lowercase before we look.

89
00:07:06.060 --> 00:07:10.340
That is the first
iteration of this program.

90
00:07:10.340 --> 00:07:12.890
We're going to grow this program bigger.

91
00:07:12.890 --> 00:07:13.640
Let's take a look at it.

92
00:07:14.670 --> 00:07:19.431
We just have a bunch of stubs, And

93
00:07:19.431 --> 00:07:24.409
we only have one main loop,
that function is written,

94
00:07:24.409 --> 00:07:29.290
and a second function that
gathers the menu choices.

95
00:07:31.210 --> 00:07:36.759
And we start this by having this
special statement at the end.

96
00:07:36.759 --> 00:07:40.263
It tells Python where to
start executing the program,

97
00:07:40.263 --> 00:07:44.849
it says starts executing at the main loop,
if this is the main program.

98
00:07:48.387 --> 00:07:52.896
The first stub that we are going to
flash in, right before function form,

99
00:07:52.896 --> 00:07:56.531
is show phones, the reason for
that is and if we did delete,

100
00:07:56.531 --> 00:07:59.390
we would know whether
something was deleted.

101
00:07:59.390 --> 00:08:03.890
If we did new we would know whether
something new was done, with show phones

102
00:08:03.890 --> 00:08:08.000
we can see whether these other things
are working when we write them.

103
00:08:09.120 --> 00:08:12.832
Let me run this one, just a moment and
show you what it does.

104
00:08:19.346 --> 00:08:20.913
Nothing else really works.

105
00:08:24.925 --> 00:08:25.425
Show.

106
00:08:30.120 --> 00:08:37.440
Now the way we're doing this is,
I've going to ask something to show.

107
00:08:37.440 --> 00:08:40.175
So I create a list of phones here.

108
00:08:40.175 --> 00:08:46.145
There are two phones Jerry Seinfeld’s
number and Cosmo Kramer his number.

109
00:08:46.145 --> 00:08:50.274
Each phone is a two element list
consisting of name and number.

110
00:08:50.274 --> 00:08:54.414
The name position is zero
the phone position is one and

111
00:08:54.414 --> 00:08:58.922
I’m going to use name position and
phone position as zero and

112
00:08:58.922 --> 00:09:04.730
one to refer to this side so I don’t
get confused as to what I'm looking at.

113
00:09:05.990 --> 00:09:09.890
Then has to be a header for
this name and phone number.

114
00:09:09.890 --> 00:09:13.572
And so, I create a header as
though it were another phone.

115
00:09:18.123 --> 00:09:20.900
Now, here's the show phones function.

116
00:09:20.900 --> 00:09:25.016
First of all,
I'm going to show phone the header,

117
00:09:25.016 --> 00:09:28.370
the first ones black, I’ll show you
what this black is about later.

118
00:09:30.880 --> 00:09:33.970
Then I am going to step
through the phones.

119
00:09:33.970 --> 00:09:36.854
For ever phone in phones,
I’m going to show phone and

120
00:09:36.854 --> 00:09:40.980
I’m going to send this index,
so there numbered 1,2,3,4,5.

121
00:09:40.980 --> 00:09:43.452
Start the index off at one,

122
00:09:43.452 --> 00:09:48.504
after I show a phone I'm going to
bump the index up by one and

123
00:09:48.504 --> 00:09:54.757
I'm going to pass to show phone not
only the phone itself but the index.

124
00:09:54.757 --> 00:09:58.325
And I'm not going to show
the individual phone in this function,

125
00:09:58.325 --> 00:10:01.300
I'm going to have another
function that will do that.

126
00:10:02.490 --> 00:10:04.460
And then at the end I'm
going to skip a line so

127
00:10:04.460 --> 00:10:07.690
that there's a little space
after the list of phones.

128
00:10:08.840 --> 00:10:10.910
Here's how we show an individual phone.

129
00:10:10.910 --> 00:10:15.600
We pass the phone which is remember
a list with two things in it,

130
00:10:15.600 --> 00:10:17.520
the name and the phone number.

131
00:10:17.520 --> 00:10:18.790
And we send the index.

132
00:10:20.550 --> 00:10:22.080
We have a string.

133
00:10:22.080 --> 00:10:24.370
The index is going to
occupy three spaces and

134
00:10:24.370 --> 00:10:25.520
it's going to be right to just to fact.

135
00:10:28.560 --> 00:10:31.920
The names is going to occupy 20 spaces and
it's going to be a left justify.

136
00:10:31.920 --> 00:10:37.115
The phone number is going to occupy 16
spaces and it'll be right justified.

137
00:10:40.562 --> 00:10:44.492
We're going to use that output string and
we're going to format it so

138
00:10:44.492 --> 00:10:48.340
that index goes into
the zero element position.

139
00:10:48.340 --> 00:10:52.490
Phone name goes into the one position and

140
00:10:52.490 --> 00:10:58.280
phone number goes into the third position.

141
00:10:58.280 --> 00:11:02.230
And there it is, index,
name, phone number.

142
00:11:02.230 --> 00:11:03.940
That's all there is to it.

143
00:11:03.940 --> 00:11:09.560
You've got show phones,
which is going to send the header,

144
00:11:09.560 --> 00:11:14.780
it's going to step through the list of
phones, and send show phone, each phone.

145
00:11:14.780 --> 00:11:19.296
And the show phones are going to
be formatted and printed.

146
00:11:19.296 --> 00:11:27.700
Up here we did create these things and
that's to get us by right now.

147
00:11:29.550 --> 00:11:32.932
Ultimately, we'll set the phones
list to the empty list.

148
00:11:35.806 --> 00:11:40.360
Now let's replace some more of
these stubs with real functions.

149
00:11:40.360 --> 00:11:43.060
Let's start by creating a new phone.

150
00:11:45.250 --> 00:11:49.362
First, let me show you what
this version will run like.

151
00:11:52.586 --> 00:11:56.947
They are the ones that we've built in, and

152
00:11:56.947 --> 00:12:02.287
here's a new one,
enter the data for the new phone.

153
00:12:02.287 --> 00:12:07.588
George Costanza.

154
00:12:07.588 --> 00:12:16.638
2128351419.

155
00:12:16.638 --> 00:12:18.370
Now we show, and there's George.

156
00:12:20.200 --> 00:12:22.730
Now we can delete something too.

157
00:12:23.750 --> 00:12:25.520
Well, which one do you want to delete?

158
00:12:25.520 --> 00:12:26.710
We'll delete George.

159
00:12:29.100 --> 00:12:30.580
Now he's gone.

160
00:12:30.580 --> 00:12:32.150
That's what's new in this version.

161
00:12:33.760 --> 00:12:38.500
First, let's start with
how you create a phone.

162
00:12:39.560 --> 00:12:43.160
When you create a phone, it's going to
print into the data for a new phone.

163
00:12:44.500 --> 00:12:45.060
There it is.

164
00:12:46.500 --> 00:12:49.870
Then you gotta use an input
to get the new name.

165
00:12:49.870 --> 00:12:53.020
You're going to input to
get a new phone number.

166
00:12:53.020 --> 00:12:57.590
Then you're going to build the sub-list,
name and phone number, and

167
00:12:57.590 --> 00:13:01.380
then you're going to pend it onto the
phones list and then you'll skip a line.

168
00:13:02.820 --> 00:13:03.617
That's all there is to it.

169
00:13:06.452 --> 00:13:09.551
Enter the name, enter the number,

170
00:13:09.551 --> 00:13:14.210
build a phone sub-list,
pend it to the phones list.

171
00:13:15.910 --> 00:13:16.990
Remember the phones list.

172
00:13:18.170 --> 00:13:22.262
Here starts with Jerry Seinfeld and
Cosmo Kramer.

173
00:13:25.541 --> 00:13:27.070
Now, let's look at delete.

174
00:13:27.070 --> 00:13:28.847
That's a little bit more complex.

175
00:13:32.845 --> 00:13:37.434
Now down in the main loop,
when you choose delete,

176
00:13:37.434 --> 00:13:44.265
it's going to ask which item do you want
to delete and reprint which one it is for

177
00:13:44.265 --> 00:13:49.093
the time being and
then we'll try to delete that one.

178
00:13:53.682 --> 00:13:55.620
Here's the delete function.

179
00:13:58.130 --> 00:14:03.602
First of all, we check to see
if there's a proper menu choice.

180
00:14:03.602 --> 00:14:06.599
At the time we did this deletion,
there were only three people in there.

181
00:14:06.599 --> 00:14:09.892
If I asked it to 17, it couldn't do it.

182
00:14:09.892 --> 00:14:15.790
So we are going to check to see if
that's a legitimate menu choice.

183
00:14:15.790 --> 00:14:21.975
Also if you typed in a letter or something
like that, we want to fill to that out.

184
00:14:21.975 --> 00:14:25.130
So, we're going

185
00:14:25.130 --> 00:14:29.570
to write a routine that'll check to
see if that is a proper menu choice.

186
00:14:29.570 --> 00:14:34.894
And if it's not, we're just going to
return without deleting the phone.

187
00:14:34.894 --> 00:14:37.630
If it is a proper menu choice,
I want to change to it an integer.

188
00:14:41.046 --> 00:14:43.824
And then I'm going to delete one of them.

189
00:14:43.824 --> 00:14:49.176
Now remember, we count these one,
two, three, four, five.

190
00:14:49.176 --> 00:14:50.860
Those are the phone lines.

191
00:14:52.190 --> 00:14:56.380
But, Python counts zero, one, two, three.

192
00:14:57.980 --> 00:15:00.990
So, what we have to do is
reduce that by one and

193
00:15:00.990 --> 00:15:05.280
then we delete that item
from the phone's list.

194
00:15:05.280 --> 00:15:07.310
And then we'll print
that we've deleted it.

195
00:15:10.290 --> 00:15:13.960
Now let’s take a look at this
proper_menu_choice business.

196
00:15:13.960 --> 00:15:20.390
We pass this which onto that
proper_menu_choice option.

197
00:15:20.390 --> 00:15:24.920
Now remember which came from
an input statement so it’s a string.

198
00:15:24.920 --> 00:15:27.890
Now we going to have to
convert it to a number.

199
00:15:27.890 --> 00:15:31.750
So first of all, we're going to need to
check to see if there’s digits in it.

200
00:15:31.750 --> 00:15:34.250
If it has something in
it which is not a digit

201
00:15:34.250 --> 00:15:38.370
then which.isdigit will return false.

202
00:15:39.960 --> 00:15:43.910
So not is digit would be true,
and we have a print,

203
00:15:43.910 --> 00:15:49.160
this which needs to be a number
of a phone, and return false.

204
00:15:49.160 --> 00:15:53.890
If it returns false to delete phone,

205
00:15:53.890 --> 00:16:00.300
then not false would be true and it
would return without deleting the phone.

206
00:16:00.300 --> 00:16:04.416
So the first thing that happens is
we check to see if it's a number.

207
00:16:04.416 --> 00:16:09.816
And if it is a number,
we'll convert it to an integer.

208
00:16:09.816 --> 00:16:13.686
Now, there's another problem.

209
00:16:13.686 --> 00:16:16.626
It could be a negative number.

210
00:16:16.626 --> 00:16:21.225
We could have three phones and
it be the number 217.

211
00:16:21.225 --> 00:16:22.730
We check to see whether this negative,

212
00:16:22.730 --> 00:16:25.570
whether it's a bigger number
than there are phones.

213
00:16:25.570 --> 00:16:29.785
If so, we'll print that it needs
to be the number of a home.

214
00:16:31.990 --> 00:16:34.170
And then we'll return false so

215
00:16:34.170 --> 00:16:38.270
that delete_phone will
not attempt to delete it.

216
00:16:39.320 --> 00:16:44.840
Now if it passes this test, that it's
a number, it converts to a number and

217
00:16:44.840 --> 00:16:49.510
it’s a number that’s within the proper
range, then we are going to consider it

218
00:16:49.510 --> 00:16:54.180
an acceptable number to delete and
will return true.

219
00:16:56.280 --> 00:17:02.080
So to summarize, delete_phones will
be passed which phone to delete.

220
00:17:02.080 --> 00:17:05.320
It will check to see
if that’s a number and

221
00:17:05.320 --> 00:17:07.880
if it’s a number within the proper range.

222
00:17:07.880 --> 00:17:09.821
If it is it will convert
it to an integer and

223
00:17:09.821 --> 00:17:12.547
it will delete that particular
phone from the phone list.